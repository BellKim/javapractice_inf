1. 변수 : 하나의 값을 저장하기 위한 기억공간
int num = 3;

2. 배열 : 데이터 타입이 같은 데이터를 하나로 묶는것
int[0]=10;
int[1]=20;
int[2]=30;
int[3]=40;
int[4]=50;

typeof struct person{
	char[] name;
	int age;
	char gen;
	
}

person p;
p.name = "홍길동";
p.age = 30;
p.gen = M;

클래스 : 구조체(맴버변수) + 함수 (메소드 )
=> 객체들의 공통점을 찾아내여 그 공통점을 표현하는것, 객체의 설계도

객체(object) : 실 세계에 존재하는 모든 사물이나 개념. 
객체모델링 : 객체의 특징과 기능을 구분한다. ( 객체를 프로그램으로 구현하기 위한 분석작업)


홍길동 (객체)
객체의 특징 : 홍길동 30 남. 
객체의 기능 : 먹는다, 달린다, 잔다 등등 ..

이영희 (객체)
객체의 특징 : 이영희 30 여. 
객체의 기능 : 먹는다, 달린다, 잔다 등등 ..

class Person{
	String age;		//맴버변수
	int age;
	char gen;


	void run() {	//매소드
		System.out.println("run");	
	}
	
	void eat() {	//매소드
		System.out.println("eat");
	}
}
//////////////////////////////////////////////
Public static void main(String[] args) {
	int name;
	Person p;	//객체선언- 주소를 저장히기 위한  stack영역에서 4바이트 메모리생성.
	name=3;
	
	p=new Person();//객체생성 - heap영역에 메모리 생성. 
	
	p:객체참조변수 = 객체변수=참조변수
	p.name="홍길동";
	p.age=30;
	p.gen='남';
	p.eat();
	p.run();
	
	
	person pn = new Person();
	pn.name="이영희";
	pn.age=25;
	pn.gen='여';
	pn.eat();
	pn.run();
	
}


stack						heap

p.홍길동  (0x1111)				
4byte P 변수 메모리생성			0x1111  (p.홍길동)

							name =  ddd;
							age  = 123;
							gen  = 남;
							
p.김영희	(0x0123)
							0x0123 (p.김영희)
							name =  ddd;
							age  = 123;
							gen  = 남;
							
							
							
							
							
[명명규칙]
1. 대문자로 시작한다.(관례)
2. 두단어 이상의 이름을 지을때는 단어의 첫글자는 대문자로 시작하고 나머지 소문자로 사용한다.(CarData);

[변수, 메소드]
1. 소문자로 시작한다. (관례)
2. 두단어 이상 이름을 지을때는 단어의 첫글자는 대문자로 시작하고 나머지 소문자로 사용한다.(carData)




							







